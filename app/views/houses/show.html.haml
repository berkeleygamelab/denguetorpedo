.row
  .span15.offset1    
    %h1
      - if @house.user.role == "verificador"
        - if @house.user.gender == true
          #{@house.name} - verificador
        - else
          #{@house.name} - verificadora
      - elsif @house.user.role == "coordenador"
        - if @house.user.gender == true
          Casa #{@house.name} - coordenador
        - else
          Casa #{@house.name} - coordenadora
      - else
        Casa #{@house.name}
.row
  .span9.offset1
    %br
    .row
    
      .span4        
        - if @house.profile_photo.nil?
          = image_tag "default_images/house_default_image.png", :id => 'house_photo'
        - else
          = image_tag @house.profile_photo.url(:large), :id => 'house_photo'
      .span5
        %br
        .row
          .span2
            #house_neighborhood.house_gray
              .row
                Comunidade
              .row
                #house_neighborhood_bg
                  = link_to @house.neighborhood.name, neighborhood_path(@house.neighborhood)
              .row
                #{@house.location.nation}             
          .span2.offset1
            .house_gray            
              .row{style: "margin-left:-40px;"}
                Pontos da casa
              .row
                #house_points_bg
                  #{ @house.points.to_s}          
          .row
            #house_badges
            .span5


    .row
      .span10
        %h2 Moradores
        - for member in @house.members.slice(0, 7)
          #house_members.span1
            .row
              - if (member.profile_photo_file_name.nil?)
                = link_to image_tag("default_images/profile_default_image.png"), user_path(member)
              - else
                = link_to image_tag(member.profile_photo.url(:small), :width => 70, :height => 70), user_path(member)
            .row
              = link_to member.first_name, user_path(member)

    .row
      .span10
        %h2 Vizinhos na #{@house.neighborhood.name}
        #houses_in_neighborhood
          - if @neighbors.count == 1 
            %p NÃ£o tem nenhum vizinho usando Dengue Torpedo. Recrute alguem!
          - else
            %ul
            - for neighbor in @neighbors
              %li
                - if neighbor.profile_photo_file_name.nil?
                  = link_to image_tag("default_images/house_small_default_image.png"), house_path(neighbor), title: "#{neighbor.name}"
                - else 
                  = link_to image_tag(neighbor.profile_photo.url(:small), :width => 70, :height => 70), house_path(neighbor), title: "#{neighbor.name}"
                  
    /.row
    /  .span8
    /    = render :partial => "posts/new", locals: { wall: @house }
    %br
    .row{:style => "margin-top:13px;"}
      %h2.span15
        Blogs e focos marcados
    /.row
    /  .span12          
    /    = link_to 'Todos', house_path(@user, :filter => 'all'), :class => @feed_active_all
    /    |
    /    = link_to 'Focos', house_path(@user, :filter => 'reports'), :class => @feed_active_reports
    /    |
    /    = link_to 'Blog', user_path(@user, :filter => 'posts'), :class => @feed_active_posts
    .row
      .span9
        - for post in @house.posts.sort{|a, b| b.created_at <=> a.created_at}
          = render :partial => "/posts/post", :locals => {:post => post}
    
  .span6
    .row{:style => "margin-top:-37px;"}
      %h2.span6 Focos marcados pela casa:
      #house_reports.span6
        .row
          .span6
            #map{style: "margin-left:5px;height: 500px;"}
            :javascript
              var map;

              require(["esri/map", "esri/toolbars/draw", "esri/tasks/locator", "esri/layers/ArcGISTiledMapServiceLayer", "esri/layers/FeatureLayer", "esri/SpatialReference", "esri/geometry/Point", "esri/config", "esri/graphic", "esri/symbols/SimpleMarkerSymbol", "esri/symbols/SimpleLineSymbol", "esri/symbols/TextSymbol", "dojo/_base/Color", "esri/symbols/PictureMarkerSymbol", "esri/renderers/ClassBreaksRenderer", "esri/dijit/Popup", "esri/dijit/PopupTemplate", "dojo/dom-construct", "dojo/dom", "esri/InfoTemplate", "dojo/domReady!"], function(Map, Draw, Locator, Tiled, FeatureLayer, SpatialReference, Point, Geometry, Graphic, SimpleMarkerSymbol, SimpleLineSymbol, TextSymbol, Color, PictureMarkerSymbol, ClassBreaksRenderer, Popup, PopupTemplate, domConstruct, dom, InfoTemplate) {
                var customExtent = new esri.geometry.Extent(667070.412263838,7456962.88258577,688175.480935968,7475960.60361382, new esri.SpatialReference({"wkid":29193}));

                var point = new Point(680291.2151545063, 7471401.29586681, new esri.SpatialReference({wkid: 29193}));
                var popup = new Popup({
                  highlight: false
                }, domConstruct.create("div"));

                map = new Map("map", {
                  center: point,
                  zoom: 4,
                  extent: customExtent,
                  infoWindow:popup
                });
                
                var tiled = new Tiled("http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Basico/mapa_basico_utm/MapServer");
                map.addLayer(tiled);



                var grey = new PictureMarkerSymbol("/assets/markers/grey_marker.png", 64, 64).setOffset(15, 15);
                var orange = new PictureMarkerSymbol("/assets/markers/orange_marker.png", 64, 64).setOffset(15, 15);
                var mixed = new PictureMarkerSymbol("/assets/markers/mixed_marker.png", 64, 64).setOffset(15, 15);
                var markers = #{@markers.to_json};
                var open_markers = #{@open_markers.to_json};
                var eliminated_markers = #{@eliminated_markers.to_json};

                var counts = #{@counts.to_json};
                var open_counts = #{@open_counts.to_json};
                var eliminated_counts = #{@eliminated_counts.to_json};
                var count;
                var open_count;
                var eliminated_count;
                var textSymbol;

                map.on("load", function() {
                  map.infoWindow.resize(200, 200);
                  for (var i = 0; i < markers.length; i++) {

                    count = counts[markers[i].id];
                    open_count = open_counts[markers[i].id];
                    eliminated_count = eliminated_counts[markers[i].id];
                    
                    var template = new InfoTemplate();
                    template.setTitle(markers[i].address);
                    template.content = "<p>Em aberto: </p><br><p>Expirados: </p><br><p>Eliminados: </p>";
                    
                    var graphic;
                    var textGraphic;

                    if (open_count && eliminated_count) {
                      graphic = new Graphic(new Point(markers[i].x, markers[i].y), mixed);
                      template.content = "<p>Em aberto: " + open_count + "</p><br><p>Expirados: </p><br><p>Eliminados: " + eliminated_count + "</p>";
                    } else if (open_count > 0) {
                      graphic = new Graphic(new Point(markers[i].x, markers[i].y), orange);
                      template.content = "<p>Em aberto: " + open_count + "</p><br><p>Expirados: </p>";
                    } else if (eliminated_count > 0) {
                      graphic = new Graphic(new Point(markers[i].x, markers[i].y), grey);
                    }
                    textSymbol = new TextSymbol(count).setColor("#000000").setOffset(0, 25);
                    textGraphic = new Graphic(new Point(markers[i].x, markers[i].y), textSymbol);
                    graphic.setInfoTemplate(template);
                    textGraphic.setInfoTemplate(template); 
                    map.graphics.add(graphic);
                    map.graphics.add(textGraphic);
                  }
                });

                $("a#house_todos_report_button").click(function() {
                  map.graphics.clear();

                  var markers = #{@markers.to_json};
                  for (var i = 0; i < markers.length; i++) {
                    count = counts[markers[i].id];
                    open_count = open_counts[markers[i].id];
                    eliminated_count = eliminated_counts[markers[i].id];
                    textSymbol = new TextSymbol(count).setColor("#000000").setOffset(0, 25);
                     if (open_count && eliminated_count) {
                      map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), mixed));
                    } else if (open_count > 0) {
                      map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), orange));
                    } else if (eliminated_count > 0) {
                      map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), grey));
                    }
                    textSymbol = new TextSymbol(count).setColor("#000000").setOffset(0, 25);
                    map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), textSymbol));
                  }
                });
                $("a#house_open_report_button").click(function() {
                  map.graphics.clear();
                  var markers = #{@open_markers.to_json};
                  for (var i = 0; i < markers.length; i++) {
                    count = open_counts[open_markers[i].id];
                    textSymbol = new TextSymbol(count).setColor("#000000").setOffset(0, 25);
                    map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), orange));
                    map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), textSymbol));
                  }
                });
                $("a#house_resolved_report_button").click(function() {
                  map.graphics.clear();
                  var markers = #{@eliminated_markers.to_json};
                  for (var i = 0; i < markers.length; i++) {
                    count = eliminated_counts[eliminated_markers[i].id];
                    textSymbol = new TextSymbol(count).setColor("#000000").setOffset(0, 25);
                    map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), grey));
                    map.graphics.add(new Graphic(new Point(markers[i].x, markers[i].y), textSymbol));
                  }
                });
              });
        .row
          .span6
            #report_status_bar
              %ul
                %li
                  %a{:href => "#", :style => "color:black;", :id => "house_todos_report_button"}
                    #house_all_report_button.house_report_button.span1.active
                      .row
                        = @house.reports.count
                      .row Todos
                %li
                  %a{:href => "#", :id => "house_open_report_button"}
                    #house_open_report_button.house_report_button.span1
                      .row
                        = @house.created_reports.count
                      .row Em aberto
                %li
                  %a{:href => "#", :id => "house_resolved_report_button"}
                    #house_resolved_report_button.house_report_button.span1
                      .row
                        = @house.eliminated_reports.count
                      .row Eliminados
              
        .row
          #list_of_house_reports
            - for report in @house.reports
              .row
                - if report.status == :reported
                  = render :partial => "/houses/open_report", :object => report
                - if report.status == :eliminated
                  = render :partial => "/houses/resolved_report", :object => report
             

:javascript
  $(document).ready( function() {
  $(".map_container").css("height", "180px")
  })
