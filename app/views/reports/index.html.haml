.row
  .span4.offset1
    - if flash[:notice] 
      %h2.notice{style: "margin: 10px; width: 700px;"}  
        = flash[:notice]
    - if flash[:error]
      %h2.alert{style: "margin: 10px; width: 700px;background-color:transparent;"} 
        = flash[:error]
    %h1 Focos marcados
  %br
  .span#report_buttons{:style => "font-size:20px;"}
    / %h1 Marcar um foco
    
.row          
  .row.span10.offset1
    #report_buttons
      
      = link_to 'Todos', reports_path(:view => 'recent'), :class=>'bttn reports_feed_button ' + @reports_feed_button_active
      = link_to 'Em aberto', reports_path(:view => 'open'), :class=>'bttn reports_open_button ' + @reports_open_button_active
      = link_to 'Eliminados', reports_path(:view => 'eliminate'), :class=>'bttn reports_resolved_button ' + @reports_resolved_button_active
      - if @current_user.role == "verificador"
        = link_to "Marcar um foco", "#", :class => 'bttn make_report_button ' + @make_report_button_active, :style => "margin-left:90px;padding-top:13px;background-color:#aaaaaa;color:white;font-weight:bold;height:21px;font-size:25px;pointer-events: none;"
      - else
        = link_to "Marcar um foco", reports_path(:view => 'make_report'), :class => 'bttn make_report_button ' + @make_report_button_active, :style => "margin-left:90px;padding-top:13px;background-color:#60BB50;color:white;font-weight:bold;height:21px;font-size:25px;"

  .row
    .span9.offset1
      - if params[:view] == 'recent'
        = render :partial => 'reports/recent', :action=>'index'
      - elsif params[:view] == 'open'
        = render :partial => 'reports/open_list'
      - elsif params[:view] == 'eliminate'
        = render :partial => 'reports/eliminate_list'
      - else params[:view] == 'make_report'
        = render :partial => "reports/make_report_form"
    
    .span6{style: "margin-top:-63px;"}
      .row
        .span8
          .report_map_search{style: "overflow:auto;"}
            - if params[:view] == 'make_report'
              %h2{style: 'margin-left:10px;font-size:15px;line-height:25px;', title: "O mapa pode não encontrar o seu endereço. Nesse caso, mova o marcador clicando na localização correta."}2. Clique na localização correta para adicionar um marcador.
              %input{type: "button", value: "Va para Maré", style: "float:right;margin:-20px 5px 5px 0px;", id: "go_to_mare"}
            - else
              %h2{style: 'margin-left: 10px;', title: "Para ajustar, dê um zoom ou arraste o mapa."} Ajuste para filtar os focos.
              

              %h2{style: 'margin-left: 10px;'} Ou procure perto do endereço:
              %svg{display:"inline", style: "width:30px;height:30px;float:left;margin-left:8px;margin-top:2px; "}
                %path{d: "M 6 6 L18 6 L12 18z", style: "fill:blue;stroke:black;"}
              %form{id: "address_search_form", style: "margin-bottom:0px;"}
                %input.span6{:type => 'text', id: "address_search", :placeholder => "Digite um endereço e pressione enter", :style => 'width: 300px;'}
                %input{type: "button", value: "Va para Maré", style: "margin-left:10px;margin-bottom:10px;", id: "go_to_mare"}
      #map{style: "height: 440px;width:440px;margin-left:10px; margin-top:10px;"}
      

      - if params[:view] == 'make_report'
        :javascript
          var map, tb;
          require(["esri/map", "esri/toolbars/draw", "esri/tasks/locator", "esri/layers/ArcGISTiledMapServiceLayer", "esri/SpatialReference", "esri/geometry/Point", "esri/config", "esri/graphic", "esri/symbols/SimpleMarkerSymbol", "esri/symbols/SimpleLineSymbol", "esri/symbols/TextSymbol", "dojo/_base/Color", "esri/symbols/PictureMarkerSymbol", "esri/renderers/ClassBreaksRenderer", "dojo/domReady!"], function(Map, Draw, Locator, Tiled, SpatialReference, Point, Geometry, Graphic, SimpleMarkerSymbol, SimpleLineSymbol, TextSymbol, Color, PictureMarkerSymbol, ClassBreaksRenderer) {
            var customExtent = new esri.geometry.Extent(667070.412263838,7456962.88258577,688175.480935968,7475960.60361382, new esri.SpatialReference({"wkid":29193}));

            var picBaseUrl = "http://static.arcgis.com/images/Symbols/Shapes/";
            var gray = new PictureMarkerSymbol(picBaseUrl + "BlackPin1LargeB.png", 64, 64).setOffset(0, 15);
            var blue = new PictureMarkerSymbol(picBaseUrl + "BluePin1LargeB.png", 64, 64).setOffset(0, 15);
            var red = new PictureMarkerSymbol(picBaseUrl + "OrangePin1LargeB.png", 64, 64).setOffset(0, 15);
            var point = new Point(680291.2151545063, 7471401.29586681, new esri.SpatialReference({wkid: 29193}));
            map = new Map("map", {
              center: point,
              zoom: 6,
              extent: customExtent
            });
            
            var tiled = new Tiled("http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Basico/mapa_basico_utm/MapServer");
            map.addLayer(tiled);

            map.on("load", function() {
              
              tb = new Draw(map);
              tb.on("draw-end", addGraphic);
              tb.activate("point");
            });



            function addGraphic(evt) {
              map.graphics.clear();
              map.enableMapNavigation();

              // figure out which symbol to use
              var symbol = new SimpleMarkerSymbol();
              symbol.setStyle("STYLE_PATH");
              symbol.setPath("M 10 10 L30 10 L20 30z");
              symbol.setColor(new Color("red"));
              
              $("input#x").val(evt.geometry.x);
              $("input#y").val(evt.geometry.y);
              map.graphics.add(new Graphic(evt.geometry, red));
              map.centerAt(evt.mapPoint);

            }

            $("#street_type").change(function() {

            });
            $("#street_name").change(function() {
            });

            $("#street_number").change(function() {
              $.ajax({
                url: "http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Geocode/DBO.Loc_composto/GeocodeServer/findAddressCandidates",
                type: "GET",
                dataType: "jsonp",
                data: {"f": "pjson", "Street": $("#street_type").val() + " " + $("#street_name").val() + " " + $("#street_number").val()},
                success: function(m) {
                  map.graphics.clear();
                  var candidates = m.candidates;
                  

                  if (candidates.length > 0) {
                    var symbol = new SimpleMarkerSymbol();
                    symbol.setStyle("STYLE_PATH");
                    symbol.setPath("M 10 10 L30 10 L20 30z");
                    symbol.setColor(new Color("red"));
                    map.graphics.add(new Graphic(new Point(candidates[0].location.x, candidates[0].location.y), red));
                    $("input#x").val(candidates[0].location.x);
                    $("input#y").val(candidates[0].location.y);
                    
                    map.centerAndZoom(new Point(candidates[0].location.x, candidates[0].location.y, new esri.SpatialReference({"wkid": 29193})), 6);
                  }
                },
                error: function(m) {
                  console.log(JSON.stringify(m));
                }
              });
            });
            $("input#go_to_mare").click(function() {
              map.centerAndZoom(new Point(680291.2151545063, 7471401.29586681, new esri.SpatialReference({"wkid": 29193})), 6)
            });
          });
      - else
        :javascript
          var map;

          require(["esri/map", "esri/toolbars/draw", "esri/tasks/locator", "esri/layers/ArcGISTiledMapServiceLayer", "esri/SpatialReference", "esri/geometry/Point", "esri/config", "esri/graphic", "esri/symbols/SimpleMarkerSymbol", "esri/symbols/SimpleLineSymbol", "esri/symbols/TextSymbol", "dojo/_base/Color", "esri/symbols/PictureMarkerSymbol", "esri/renderers/ClassBreaksRenderer", "dojo/domReady!"], function(Map, Draw, Locator, Tiled, SpatialReference, Point, Geometry, Graphic, SimpleMarkerSymbol, SimpleLineSymbol, TextSymbol, Color, PictureMarkerSymbol, ClassBreaksRenderer) {
            var customExtent = new esri.geometry.Extent(667070.412263838,7456962.88258577,688175.480935968,7475960.60361382, new esri.SpatialReference({"wkid":29193}));

            var point = new Point(680291.2151545063, 7471401.29586681, new esri.SpatialReference({wkid: 29193}));
            map = new Map("map", {
              center: point,
              zoom: 6,
              extent: customExtent
            });
            
            var tiled = new Tiled("http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Basico/mapa_basico_utm/MapServer");
            map.addLayer(tiled);
            var markers = #{@markers.to_json};
            var open_markers = #{@open_markers.to_json};
            var eliminated_markers = #{@eliminated_markers.to_json};
            var counts = #{@counts.to_json};
            map.on("load", function() {
              
              tb = new Draw(map);
              tb.on("draw-end", addGraphic);
              tb.activate("point");
            });


            var picBaseUrl = "http://static.arcgis.com/images/Symbols/Shapes/";
            var gray = new PictureMarkerSymbol(picBaseUrl + "BlackPin1LargeB.png", 48, 64).setOffset(0, 15);
            var blue = new PictureMarkerSymbol(picBaseUrl + "BluePin1LargeB.png", 48, 64).setOffset(0, 15);
            var red = new PictureMarkerSymbol(picBaseUrl + "OrangePin1LargeB.png", 48, 64).setOffset(0, 15);
            
            map.on("load", function() {

              for (var i = 0; i < open_markers.length; i++) {
                var textSymbol = new TextSymbol(1).setColor("#ffffff").setOffset(0, 10);
                map.graphics.add(new Graphic(new Point(open_markers[i].x, open_markers[i].y), red));
                map.graphics.add(new Graphic(new Point(open_markers[i].x, open_markers[i].y), textSymbol));
              }
              for (var i = 0; i < eliminated_markers.length; i++) {
                var textSymbol = new TextSymbol(3).setColor("#ffffff").setOffset(0, 10);
                map.graphics.add(new Graphic(new Point(eliminated_markers[i].x, eliminated_markers[i].y), gray));
                map.graphics.add(new Graphic(new Point(eliminated_markers[i].x, eliminated_markers[i].y), textSymbol));
              }

              tb = new Draw(map);
              tb.on("draw-end", addGraphic);
              tb.activate("point");
      
            });
            $("input#go_to_mare").click(function() {
              map.centerAndZoom(new Point(680291.2151545063, 7471401.29586681, new esri.SpatialReference({"wkid": 29193})), 6)
            });

            map.on("extent-change", function(event) {
              if (markers.length > 0) {
                for(var i = 0; i < markers.length; i++) {

                  if (event.extent.contains(new Point(markers[i].x, markers[i].y))) {
                    $($(".rp_report")[i]).show();
                  } else {
                    $($(".rp_report")[i]).hide();
                  }
                }
              } else {
                for (var i = 0; i < open_markers.length; i++) {
                  if (event.extent.contains(new Point(open_markers[i].x, open_markers[i].y))) {
                    $($(".rp_report")[i]).show();
                  } else {
                    $($(".rp_report")[i]).hide();
                  }

                }

                for (var i = 0;i < eliminated_markers.length; i++) {
                  if (event.extent.contains(new Point(eliminated_markers[i].x, eliminated_markers[i].y))) {
                    $($(".rp_report")[i]).show();
                  } else {
                    $($(".rp_report")[i]).hide();
                  }
                }
              }
              

              
            });

            var blueGraphic;

            function addGraphic(evt) {
              if (blueGraphic) {
                map.graphics.remove(blueGraphic);
              }
              map.enableMapNavigation();

              // figure out which symbol to use
              var symbol = new SimpleMarkerSymbol();
              symbol.setStyle("STYLE_PATH");
              symbol.setPath("M 10 10 L30 10 L20 30z");
              symbol.setColor(new Color("blue"));
              
              $("input#x").val(evt.geometry.x);
              $("input#y").val(evt.geometry.y);
              blueGraphic = new Graphic(evt.geometry, symbol);
              map.graphics.add(blueGraphic);
              map.centerAt(evt.mapPoint);

            }
            $("#address_search_form").submit(function(e) {
              e.preventDefault();
              $.ajax({
                url: "http://pgeo2.rio.rj.gov.br/ArcGIS2/rest/services/Geocode/DBO.Loc_composto/GeocodeServer/findAddressCandidates",
                type: "GET",
                dataType: "jsonp",
                data: {"f": "pjson", "Street": $("#address_search").val()},
                success: function(m) {
                  
                  var candidates = m.candidates;
                  

                  if (candidates.length > 0) {
                    if (blueGraphic) {
                      map.graphics.remove(blueGraphic);
                    }
                    var symbol = new SimpleMarkerSymbol();
                    symbol.setStyle("STYLE_PATH");
                    symbol.setPath("M 10 10 L30 10 L20 30z");
                    symbol.setColor(new Color("blue"));
                    blueGraphic = new Graphic(new Point(candidates[0].location.x, candidates[0].location.y), symbol);
                    map.graphics.add(blueGraphic);
                    $("input#x").val(candidates[0].location.x);
                    $("input#y").val(candidates[0].location.y);
                    
                    map.centerAndZoom(new Point(candidates[0].location.x, candidates[0].location.y, new esri.SpatialReference({"wkid": 29193})), 6);
                  }
                },
                error: function(m) {
                  console.log(JSON.stringify(m));
                }
              });

            });

          });




